spring:
  application:
    name: spring-ai-test
  ai:
    model:
      chat: openai  # 채팅 모델명, 자동 구성됨, audio speech, transcription 등 개별적으로 모델 설정시 사용.
      image:
      audio:
        speech:
        transcription:
    openai:
      api-key: ${OPEN_AI_API_KEY}
      base-url: api.openai.com # 기본 값임.
      organization-id: # 조직 ID, 선택 사항
      project-id: # 프로젝트 ID, 선택 사항
      chat:
        # enable: true OpenAi 채팅 모델 활성화(사용되지 않음. 현재는 spring.ai.model.chat 으로 사용)
        base-url: # 상위 base-url 재정의 시 사용,
        options:
          model: gpt-4o-mini # 모델명. gpt-4o, gpt-4o-mini, gpt-4-turbo, gpt-3.5-turbo 등
          temperature: 0.8 # 온도. 0에서 1 사이의 숫자. 높으면 출력 무작위, 낮으면 출력 결정적. top_p 나 해당 값 하나만 변경하는 것은 좋지만 둘 다 변경은 비권장.
          frequency-penalty: 0.0f # -2.0에서 2.0 사이의 숫자. 양수: 이미 등장한 단어나 구의 재사용 줄임(창의적), 음수: 이미 등장한 단어나 구의 재사용 장려(코딩)
#          logit-bias: # 특정 토큰이 나타날 가능성 설정(Int) (-1 ~ 1 사이는 미세한 확률 조정, -100: 해당 토큰 거의 금지, 100: 해당 단어 거의 확실히 선택)
#            "50256": -100
#            "1234": 50
          max-tokens: # (Deprecated) 채팅 응답으로 생성할 최대 토큰 수. maxCompletionTokens으로 대체됨.
          max-completion-tokens: # 사용자가 실제로 보는 텍스트 토큰(가시적인 출력 토큰)과  + 답변 생성을 위해 내부적으로 사용하는 토큰(추론 토큰)을 포함하여, 완성을 위해 생성될 수 있는 토큰 수의 상한선
          n: 1 # 하나의 프롬프트에 대해 생성할 응답의 수. 창의적 작업 등에 사용.
          store: false # OpenAI 자체 모댈 개선 목적으로 채팅 출력을 저장할 지 여부

        completions-path: /v1/chat/completions # OpenAI의 채팅 완성 API에 요청을 보낼 때 사용하는 경로(기본 값임)
        api-key: ${OPEN_AI_API_KEY} # 상위 api-key 재정의 시 사용
        organization-id: # 상위 조직 ID 재정의 시 사용, 선택 사항
        project-id: # 프로젝트 ID 재정의 시 사용, 선택 사항
    retry:
      max-attempts: 10 # 재시도 횟수
      # 지수 백오프 목적
      # 1. 외부 AI 서비스가 과부하 상태일 때, 재시도 간격을 점점 늘려 서비스에 불필요한 부하를 주지 않음.
      # 2. 즉시 재시도하지 않고 점진적으로 간격을 늘리 네트워크 및 시스템 자원을 효율적으로 사용.
      # 3. 시간이 지나면 문제가 해결될 수 있는 일시적인 네트워크 문제나 서비스 중단의 경우도 있어 점점 더 긴 간격으로 재시도하는 것이 효과적.
      backoff:
        initial-interval: 2000ms # 지수 백오프 초기 대기 시간, 작업 실패 시 각 재시도마다 대기시간이 점점 길어짐.
        multiplier: 5 # 백오프 간격 배수, 첫 번째 실패 후 initial-interval 값만큼 대기, 그 이후 해당 값을 곱한 만큼 대기
        max-interval: 3m # 재시도 백오프 최대 간격(지수 함수 식으로 늘어날 경우 무한정 증가하는 것을 방지), 기본값 3분
      on-client-errors: false # 4xx 클라이언트 오류 발생 시 재시도를 하지 않고 NonTransientAiException을 발생시킴.
      # on-client-errors: true # 4xx 클라이언트 오류 발생 시 재시도 정책에 따라 재시도함(rate limiting - 429 오류에 효과적이나 클라이언트 오류이므로 false 값 권장)
      exclude-on-http-codes: # 재시도를 하지 않는 HTTP 상태 코드 목록, NonTransientAiException을 발생 시킴. 재시도해도 해결되지 않는 오류의 재시도 방지용
      # ex: exclude-on-http-codes: 400, 401, 402, 403, 404
      on-http-codes: # 재시도해야하는 HTTP 상태 코드 목록, TransientAiException을 발생시키고, 재시도함. 화이트리스트 접근 방식.
      # ex: on-http-codes: 429, 503, 504
    chat:
      client:
        enabled: true